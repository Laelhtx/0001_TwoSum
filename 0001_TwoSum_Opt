class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        std:: unordered_map<int, int> hashMap;
        std:: vector<int> result;
        for (int i = 0; i < nums.size(); ++i){
            int compliment = target - nums[i];
            if (hashMap.count(compliment) && hashMap[compliment] != i){
                return {i, hashMap[compliment]};
            }
            hashMap[nums[i]] = i;
        }
    return {-1, -1};
    }
};
